{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport { Icon } from 'antd';\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0); // 현재 몇번째 이미지인지\n\n  return __jsx(\"div\", {\n    style: {\n      position: 'fixed',\n      zIndex: 5000,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  }, __jsx(\"header\", {\n    style: {\n      height: 44,\n      background: 'white',\n      position: 'relative',\n      padding: 0,\n      textAlign: 'center'\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      margin: 0,\n      fontSize: '17px',\n      color: '#333',\n      lineHeight: '44px'\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(Icon, {\n    type: \"close\",\n    onClick: onClose,\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      padding: 15,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 'calc(100% - 44px)',\n      background: '#090909'\n    }\n  }, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide) // 현재 슬라이드가 몇번째인지 슬라이드 할 때마다 바꿔줘야 함\n    ,\n    infinite: false // 1 2 3 4 보여주고 다시 1로 가지 않도록 막아주기.\n    ,\n    arrows: true // 화살표 추가하기\n    ,\n    slidesToShow: 1 // 한번에 한장만 보여주기\n    ,\n    slidesToScroll: 1 // 한번에 한장만 스크롤하기\n\n  }, images.map(v => {\n    return __jsx(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: 'center'\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v.src}`,\n      style: {\n        margin: '0 auto',\n        maxHeight: 750\n      }\n    }));\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 75,\n      height: 30,\n      lineHeight: '30px',\n      borderRadius: 15,\n      background: '#313131',\n      display: 'inline-block',\n      textAlign: 'center',\n      color: 'white',\n      fontSize: '15px'\n    }\n  }, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch7/front/components/ImazesZoom.js"],"names":["React","useState","PropTypes","Slick","Icon","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","position","zIndex","top","left","right","bottom","height","background","padding","textAlign","margin","fontSize","color","lineHeight","cursor","slide","map","v","src","maxHeight","width","borderRadius","display","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Slick from 'react-slick';\r\nimport { Icon } from 'antd'\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0); // 현재 몇번째 이미지인지\r\n\r\n    return (\r\n        <div style={{ position: 'fixed', zIndex: 5000, top: 0, left: 0, right: 0, bottom: 0 }}>\r\n            <header style={{ height: 44, background: 'white', position: 'relative', padding: 0, textAlign: 'center' }}>\r\n                <h1 style={{ margin: 0, fontSize: '17px', color: '#333', lineHeight: '44px' }}>상세 이미지</h1>\r\n                <Icon type=\"close\" onClick={onClose} style={{ position: 'absolute', right: 0, top: 0, padding: 15, lineHeight: '14px', cursor: 'pointer' }} />\r\n            </header>\r\n            <div style={{ height: 'calc(100% - 44px)', background: '#090909' }}>\r\n                <div>\r\n                    <Slick\r\n                        initialSlide={0}\r\n                        afterChange={slide => setCurrentSlide(slide)} // 현재 슬라이드가 몇번째인지 슬라이드 할 때마다 바꿔줘야 함\r\n                        infinite={false}    // 1 2 3 4 보여주고 다시 1로 가지 않도록 막아주기.\r\n                        arrows  // 화살표 추가하기\r\n                        slidesToShow={1} // 한번에 한장만 보여주기\r\n                        slidesToScroll={1} // 한번에 한장만 스크롤하기\r\n                    >\r\n                        {images.map(v => {\r\n                            return (\r\n                                <div style={{ padding: 32, textAlign: 'center' }}>\r\n                                    <img src={`http://localhost:3065/${v.src}`} style={{ margin: '0 auto', maxHeight: 750 }} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </Slick>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <div style={{ width: 75, height: 30, lineHeight: '30px', borderRadius: 15, background: '#313131', display: 'inline-block', textAlign: 'center', color: 'white', fontSize: '15px' }}>\r\n                            {currentSlide + 1} / {images.length}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}
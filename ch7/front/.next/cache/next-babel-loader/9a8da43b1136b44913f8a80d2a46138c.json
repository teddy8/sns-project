{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from '../components/ImazesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: `http://localhost:3065/${images[1].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  } // 이미지나 더보기를 클릭하면 ImagesZoom을 로딩함\n\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: `http://localhost:3065/${images[0].src}`,\n    width: \"50%\",\n    onClick: onZoom\n  }), __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    },\n    onClick: onZoom\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nPostImages.propTypes = {};\nexport default PostImages;","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch7/front/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMQ,MAAM,GAAGT,WAAW,CAAC,MAAM;AAC7BQ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,QAAME,OAAO,GAAGV,WAAW,CAAC,MAAM;AAC9BQ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI;AAAK,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,OAAO,EAAEH;AAA7D,MADJ,EAEKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAFvB,CADJ;AAMH;;AAED,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,WACI,4BACI,mBACI;AAAK,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MADJ,EAEI;AAAK,MAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MAFJ,CADJ,EAKKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MALvB,CADJ;AASH,GA7B8B,CA8BnC;;;AACI,SACI,4BACA,mBACE;AAAK,IAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,IAAA,KAAK,EAAC,KAA1D;AAAiE,IAAA,OAAO,EAAEH;AAA1E,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,cAAX;AAA2BC,MAAAA,KAAK,EAAE,KAAlC;AAAyCC,MAAAA,SAAS,EAAE,QAApD;AAA8DC,MAAAA,aAAa,EAAE;AAA7E,KAAZ;AAAqG,IAAA,OAAO,EAAEP;AAA9G,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADF,EAEE,iBAFF,EAGGH,MAAM,CAACK,MAAP,GAAgB,CAHnB,iDAFF,CADA,EAUCJ,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI;AAArC,IAVnB,CADJ;AAcH,CA7CD;;AA+CAL,UAAU,CAACY,SAAX,GAAuB,EAAvB;AAIA,eAAeZ,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd'\r\nimport ImagesZoom from '../components/ImazesZoom'\r\n\r\nconst PostImages = ({ images }) => {\r\n    const [showImagesZoom, setShowImagesZoom] = useState(false);\r\n    const onZoom = useCallback(() => {\r\n        setShowImagesZoom(true);\r\n    }, [])\r\n\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false);        \r\n    }, [])\r\n\r\n    if (images.length === 1) {\r\n        return (\r\n            <>\r\n                <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    if (images.length === 2) {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n                    <img src={`http://localhost:3065/${images[1].src}`} width=\"50%\" onClick={onZoom} />\r\n                </div>\r\n                {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n            </>\r\n        )\r\n    }\r\n// 이미지나 더보기를 클릭하면 ImagesZoom을 로딩함\r\n    return ( \r\n        <>\r\n        <div>\r\n          <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\"  onClick={onZoom} />\r\n          <div style={{ display: 'inline-block', width: '50%', textAlign: 'center', verticalAlign: 'middle' }} onClick={onZoom} >\r\n            <Icon type=\"plus\" />\r\n            <br />\r\n            {images.length - 1}\r\n            개의 사진 더보기\r\n          </div>\r\n        </div>\r\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n        </>\r\n    );\r\n}\r\n\r\nPostImages.propTypes = {\r\n    \r\n}\r\n\r\nexport default PostImages\r\n\r\n"]},"metadata":{},"sourceType":"module"}
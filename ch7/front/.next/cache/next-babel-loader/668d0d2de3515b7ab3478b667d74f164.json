{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\usr\\\\react-nodebird\\\\ch7\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost;\n\n  var imageInput = useRef();\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    setText('');\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (i) {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onChangeImages = useCallback(function (e) {\n    console.log('files = ', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f, i) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    console.log('이미지업로드 버튼 클릭');\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onClickRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index: index\n      });\n    };\n  }, []);\n  return __jsx(Form, {\n    style: {\n      marginBottom: 20\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    onChange: onChangeText,\n    value: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: onClickRemoveImage(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch7/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","Button","Form","Input","useSelector","useDispatch","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","imageInput","onSubmitForm","e","preventDefault","trim","alert","formData","FormData","forEach","i","append","type","data","onChangeText","target","value","onChangeImages","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onClickRemoveImage","index","marginBottom","map","v","display","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,EAAkDC,YAAlD,QAAsE,kBAAtE;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADmB,kBAEKN,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEZY,IAFY;AAAA,MAENC,OAFM;;AAAA,qBAGkBR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAH7B;AAAA,MAGXC,UAHW,gBAGXA,UAHW;AAAA,MAGCC,YAHD,gBAGCA,YAHD;;AAInB,MAAMC,UAAU,GAAGjB,MAAM,EAAzB;AAEA,MAAMkB,YAAY,GAAGpB,WAAW,CAAC,UAACqB,CAAD,EAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,OAAO,CAAC,EAAD,CAAP;;AAEA,QAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACU,IAAL,EAAd,EAA2B;AACvB,aAAOC,KAAK,CAAC,aAAD,CAAZ;AACH;;AAED,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAT,IAAAA,UAAU,CAACU,OAAX,CAAmB,UAACC,CAAD,EAAO;AACtBH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBD,CAAzB;AACH,KAFD;AAGAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BhB,IAA3B;AAEAD,IAAAA,QAAQ,CAAC;AACLkB,MAAAA,IAAI,EAAEtB,gBADD;AAELuB,MAAAA,IAAI,EAAEN;AAFD,KAAD,CAAR;AAIH,GAlB+B,EAkB7B,CAACZ,IAAD,EAAOI,UAAP,CAlB6B,CAAhC;AAoBA,MAAMe,YAAY,GAAGhC,WAAW,CAAC,UAACqB,CAAD,EAAO;AACpCP,IAAAA,OAAO,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAMC,cAAc,GAAGnC,WAAW,CAAC,UAACqB,CAAD,EAAO;AACtCe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBhB,CAAC,CAACY,MAAF,CAASK,KAAjC;AAEA,QAAMC,aAAa,GAAG,IAAIb,QAAJ,EAAtB;AACA,OAAGC,OAAH,CAAWa,IAAX,CAAgBnB,CAAC,CAACY,MAAF,CAASK,KAAzB,EAAgC,UAACG,CAAD,EAAIb,CAAJ,EAAU;AACtCW,MAAAA,aAAa,CAACV,MAAd,CAAqB,OAArB,EAA8BY,CAA9B;AACD,KAFH;AAIA7B,IAAAA,QAAQ,CAAC;AACLkB,MAAAA,IAAI,EAAErB,qBADD;AAELsB,MAAAA,IAAI,EAAEQ;AAFD,KAAD,CAAR;AAIH,GAZiC,EAY/B,EAZ+B,CAAlC;AAcA,MAAMG,kBAAkB,GAAG1C,WAAW,CAAC,YAAM;AACzCoC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAlB,IAAAA,UAAU,CAACwB,OAAX,CAAmBC,KAAnB;AACH,GAHqC,EAGnC,CAACzB,UAAU,CAACwB,OAAZ,CAHmC,CAAtC;AAKA,MAAME,kBAAkB,GAAG7C,WAAW,CAAC,UAAA8C,KAAK;AAAA,WAAI,YAAM;AAClDlC,MAAAA,QAAQ,CAAC;AACLkB,QAAAA,IAAI,EAAEpB,YADD;AAELoC,QAAAA,KAAK,EAALA;AAFK,OAAD,CAAR;AAIH,KAL2C;AAAA,GAAN,EAKnC,EALmC,CAAtC;AAMA,SACA,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAmC,IAAA,OAAO,EAAC,qBAA3C;AAAiE,IAAA,QAAQ,EAAE3B,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,SAAS,EAAE,GAA3B;AAAgC,IAAA,WAAW,EAAC,wEAA5C;AAA8D,IAAA,QAAQ,EAAEY,YAAxE;AAAsF,IAAA,KAAK,EAAEnB,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAEM,UAAxC;AAAoD,IAAA,QAAQ,EAAEgB,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEO,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,OAAO,EAAExB,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,CAAC+B,GAAX,CAAe,UAACC,CAAD,EAAIrB,CAAJ,EAAU;AACtB,WACI;AAAK,MAAA,GAAG,EAAEqB,CAAV;AAAa,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,2BAA2BD,CAArC;AAAwC,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAA/C;AAAmE,MAAA,GAAG,EAAEF,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,kBAAkB,CAACjB,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADJ;AAQH,GATA,CADL,CAPJ,CADA;AAsBH,CA7ED;;AA+EA,eAAejB,QAAf","sourcesContent":["import React, { useCallback, useState, useRef } from 'react';\r\nimport {Button, Form, Input} from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { imagePaths, isAddingPost } = useSelector(state => state.post);\r\n    const imageInput = useRef();\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        setText('');\r\n\r\n        if (!text || !text.trim()) {\r\n            return alert('게시글을 작성하세요.')\r\n        }\r\n\r\n        const formData = new FormData();\r\n        imagePaths.forEach((i) => {\r\n            formData.append('image', i);\r\n        });\r\n        formData.append('content', text);\r\n        \r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: formData,\r\n        })\r\n    }, [text, imagePaths])\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, [])\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('files = ', e.target.files);\r\n\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f, i) => {\r\n            imageFormData.append('image', f);\r\n          });\r\n\r\n        dispatch({\r\n            type: UPLOAD_IMAGES_REQUEST,\r\n            data: imageFormData,\r\n        })\r\n    }, [])\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        console.log('이미지업로드 버튼 클릭');\r\n        imageInput.current.click()\r\n    }, [imageInput.current])\r\n\r\n    const onClickRemoveImage = useCallback(index => () => {\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            index,\r\n        })\r\n    }, [])\r\n    return (\r\n    <Form style={{ marginBottom: 20 }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n        <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" onChange={onChangeText} value={text} />\r\n        <div>\r\n            <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n            <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n            <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n        </div>\r\n        <div>\r\n            {imagePaths.map((v, i) => {\r\n                return (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button onClick={onClickRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>       \r\n                )\r\n            })}\r\n        </div>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}
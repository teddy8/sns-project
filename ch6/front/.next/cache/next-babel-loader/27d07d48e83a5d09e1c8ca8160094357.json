{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport AppLayout from '../components/AppLayout';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from '../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst NodeBird = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"NodeBird ch6\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charset: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired\n};\n\nNodeBird.getInitialProps = async context => {\n  // console.log(context);\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch6/front/pages/_app.js"],"names":["React","Component","Head","PropTypes","withRedux","AppLayout","createStore","compose","applyMiddleware","Provider","reducer","createSagaMiddleware","rootSaga","NodeBird","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEZ,EAAAA,SAAF;AAAaa,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAClD,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED;AAAjB,KACI,MAAC,IAAD,QACI,oCADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC;AAA5B,IAFJ,EAGI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,OAAO,EAAC,OAA/C;AAAuD,IAAA,IAAI,EAAC;AAA5D,IAHJ,EAII;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAC;AAA5C,IAJJ,CADJ,EAOI,MAAC,SAAD,QACI,MAAC,SAAD,EAAeC,SAAf,CADJ,CAPJ,CADJ;AAaH,CAdD;;AAgBAF,QAAQ,CAACG,SAAT,GAAqB;AACjBf,EAAAA,SAAS,EAAEE,SAAS,CAACc,WAAV,CAAsBC,UADhB;AAEjBJ,EAAAA,KAAK,EAAEX,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAArB;;AAKAL,QAAQ,CAACO,eAAT,GAA2B,MAAOC,OAAP,IAAmB;AAC1C;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOrB,IAAAA;AAAP,MAAqBoB,OAA3B;AACA,MAAIN,SAAS,GAAG,EAAhB;;AACA,MAAId,SAAS,CAACmB,eAAd,EAA+B;AAC7BL,IAAAA,SAAS,GAAG,MAAMd,SAAS,CAACmB,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AACD,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD,CARH;;AAUA,MAAMQ,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC9C,QAAMC,cAAc,GAAGf,oBAAoB,EAA3C;AACA,QAAMgB,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACfxB,OAAO,CAACC,eAAe,CAAC,GAAGmB,WAAJ,CAAhB,CADQ,GAEfpB,OAAO,CACPC,eAAe,CAAC,GAAGmB,WAAJ,CADR,EAEP,CAACF,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0HC,CAAC,IAAIA,CAFxH,CAFT;AAMA,QAAMrB,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUc,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBxB,QAAnB;AACA,SAAOE,KAAP;AACH,CAbD;;AAeA,eAAeV,SAAS,CAACmB,cAAD,CAAT,CAA0BV,QAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withRedux from 'next-redux-wrapper'\r\n\r\nimport AppLayout from '../components/AppLayout'\r\n\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport { Provider } from 'react-redux';\r\nimport reducer from '../reducers'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas'\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n                <title>NodeBird ch6</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"></link>\r\n                <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\r\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n}\r\n\r\nNodeBird.getInitialProps = async (context) => {\r\n    // console.log(context);\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    return { pageProps };\r\n  };\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : compose(\r\n      applyMiddleware(...middlewares),\r\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    );  \r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nexport default withRedux(configureStore)(NodeBird); "]},"metadata":{},"sourceType":"module"}
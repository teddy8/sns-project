{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user'; // SIGN UP\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data); // throw new Error('일부로 에러 내기');\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} // LOG IN\n\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login/', loginData, {\n    withCredentials: true\n  }); // console.log('사가에서 받은 id pw')\n  // for (let i in loginData) {\n  //     console.log(i + ' ' + loginData[i]);\n  // }\n  // yield delay(2000);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    console.log('result = ' + _JSON$stringify(result.data));\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout/', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    ;\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    ;\n    yield put({\n      type: LOAD_USER_FAILURE\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchSignUp(), // watchHello(),\n  watchLogin(), watchLogout(), watchLoadUser()]);\n} // function* hello() {\n//     try {\n//         yield put({\n//             type: 'HELLO_TWO',\n//         });\n//         console.log('hello');\n//     } catch (e) {\n//         console.error(e);\n//     }\n// }\n// function* watchHello() {\n//     yield takeEvery(HELLO_SAGA, function*() {\n//         yield delay(1000);\n//         console.log(1);\n//     })\n// }\n// function* watchLogin() {\n//     yield take(LOG_IN);\n//     yield delay(2000);\n//     yield put({type: LOG_IN_SUCCESS});\n// }","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch5/front/sagas/user.js"],"names":["all","fork","takeLatest","put","call","take","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","signUpAPI","signUpData","post","signUp","action","data","type","e","console","error","watchSignUp","loginAPI","loginData","withCredentials","login","result","log","watchLogin","logoutAPI","logout","watchLogout","loadUserAPI","get","loadUser","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\nimport { \r\n    LOG_IN_REQUEST, \r\n    LOG_IN_SUCCESS, \r\n    LOG_IN_FAILURE, \r\n    SIGN_UP_REQUEST, \r\n    SIGN_UP_SUCCESS, \r\n    SIGN_UP_FAILURE,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST, \r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n} from '../reducers/user'\r\n\r\n// SIGN UP\r\nfunction signUpAPI(signUpData) {\r\n    return axios.post('/user/', signUpData)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        // throw new Error('일부로 에러 내기');\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp); \r\n}\r\n\r\n// LOG IN\r\nfunction loginAPI(loginData) {\r\n  return axios.post('/user/login/', loginData, {\r\n      withCredentials: true,\r\n  });\r\n    // console.log('사가에서 받은 id pw')\r\n    // for (let i in loginData) {\r\n    //     console.log(i + ' ' + loginData[i]);\r\n    // }\r\n    // yield delay(2000);\r\n}\r\n\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        console.log('result = '+ JSON.stringify(result.data));\r\n        \r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction *watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios.post('/user/logout/', {}, {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* logout() {\r\n    try {\r\n        yield call(logoutAPI)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e);;\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction *watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user/', {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* loadUser() {\r\n    try {\r\n        const result = yield call(loadUserAPI)\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(e) {\r\n        console.error(e);;\r\n        yield put({\r\n            type: LOAD_USER_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction *watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchSignUp(),\r\n        // watchHello(),\r\n        watchLogin(),\r\n        watchLogout(),\r\n        watchLoadUser(),\r\n    ]);\r\n}\r\n\r\n// function* hello() {\r\n//     try {\r\n//         yield put({\r\n//             type: 'HELLO_TWO',\r\n//         });\r\n//         console.log('hello');\r\n//     } catch (e) {\r\n//         console.error(e);\r\n//     }\r\n// }\r\n\r\n// function* watchHello() {\r\n//     yield takeEvery(HELLO_SAGA, function*() {\r\n//         yield delay(1000);\r\n//         console.log(1);\r\n//     })\r\n// }\r\n\r\n\r\n\r\n// function* watchLogin() {\r\n//     yield take(LOG_IN);\r\n//     yield delay(2000);\r\n//     yield put({type: LOG_IN_SUCCESS});\r\n// }"]},"metadata":{},"sourceType":"module"}
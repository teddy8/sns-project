{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: '오한민',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 성공 여부\n  isLoggingIn: false,\n  // 로그인 요청중인지\n  loginErrorReason: '',\n  // 로그인 실패 이유\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isSignedUp: false,\n  // 회원가입 성공 여부\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 이유\n  me: null,\n  // 내 정보\n  userInfo: null,\n  // 남의 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [] // 팔로워 리스트\n\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        console.log('dd = ' + _JSON$stringify(action.data)); // for (let i in action.data) {\n        //     console.log(i + \" \" + action.data[i]);\n        // }\n\n        return {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          // me: dummyUser,\n          me: action.data // loginData: action.data,\n\n        };\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return {\n          isLoggedIn: false,\n          me: null,\n          loginErrorReason: action.error\n        };\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data,\n          isSigningUp: true\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return {\n          isSigningUp: false,\n          isSignedUp: true\n        };\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return {\n          signUpErrorReason: action.error\n        };\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch5/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","id","initialState","isLoggedIn","isLoggingIn","loginErrorReason","isLoggingOut","isSignedUp","isSigningUp","signUpErrorReason","me","userInfo","followingList","followerList","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","state","action","type","console","log","data","error","signUpData"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: '오한민',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    id: 1\r\n};\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false, // 로그인 성공 여부\r\n    isLoggingIn: false, // 로그인 요청중인지\r\n    loginErrorReason: '', // 로그인 실패 이유\r\n\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n\r\n    isSignedUp: false, // 회원가입 성공 여부\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: '', // 회원가입 실패 이유\r\n\r\n    me: null, // 내 정보\r\n    userInfo: null, // 남의 정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [] // 팔로워 리스트\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            console.log('dd = ' + JSON.stringify(action.data));\r\n            \r\n            // for (let i in action.data) {\r\n            //     console.log(i + \" \" + action.data[i]);\r\n                \r\n            // }\r\n            return {\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                // me: dummyUser,\r\n                me: action.data,\r\n              \r\n                // loginData: action.data,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                isLoggedIn: false,\r\n                me: null,\r\n                loginErrorReason: action.error\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                isLoggingOut: false,\r\n                me: null,\r\n            }\r\n        }\r\n\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n                isSigningUp: true,\r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            }\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            return {\r\n                signUpErrorReason: action.error,\r\n            }\r\n        }\r\n\r\n        case LOAD_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                me: action.data,\r\n            }\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}
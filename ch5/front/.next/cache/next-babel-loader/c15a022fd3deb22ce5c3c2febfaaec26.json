{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\usr\\\\react-nodebird\\\\ch5\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useInput } from '../pages/signup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost;\n\n  var onSubmitForm = useCallback(function (e) {\n    console.log('front가 입력받은 텍스트 : ' + text);\n    setText('');\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      marginBottom: 20\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    onChange: onChangeText,\n    value: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'https://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch5/front/components/PostForm.js"],"names":["React","useCallback","useState","Button","Form","Input","useInput","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","onSubmitForm","e","console","log","preventDefault","type","data","content","onChangeText","target","value","marginBottom","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport {Button, Form, Input} from 'antd';\r\nimport {useInput} from '../pages/signup'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { imagePaths, isAddingPost } = useSelector(state => state.post);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        console.log('front가 입력받은 텍스트 : ' + text);\r\n        \r\n        setText('');\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text,\r\n            }\r\n        })\r\n    }, [text])\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, [])\r\n\r\n    return (\r\n    <Form style={{ marginBottom: 20 }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n        <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" onChange={onChangeText} value={text} />\r\n        <div>\r\n            <input type=\"file\" multiple hidden />\r\n            <Button>이미지 업로드</Button>\r\n            <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\r\n        </div>\r\n        <div>\r\n            {imagePaths.map((v, i) => {\r\n                return (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={'https://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>       \r\n                )\r\n            })}\r\n        </div>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}
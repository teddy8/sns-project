{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\usr\\\\react-nodebird\\\\ch5\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useCallback, useEffect, memo } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUpAction, SIGN_UP_REQUEST } from '../reducers/user';\nimport Router from 'next/router';\nconst TextInput = memo(({\n  name,\n  value,\n  onChange\n}) => {\n  return __jsx(Input, {\n    name: name,\n    value: value,\n    required: true,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n});\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [id, onChangeId] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput(''); // 패스워드\n\n  const [passwordCheck, onChangePasswordCheck] = useInput(''); // 패스워드확인\n\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    me,\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id,\n      nickname,\n      password,\n      passwordCheck,\n      term\n    }); // dispatch(signUpAction({ id, password, nickname }));\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  useEffect(() => {\n    setPasswordError(password !== passwordCheck);\n  }, [password, passwordCheck]);\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      // alert('이미 로그인 되어있어 메인화면으로 이동합니다.')\n      Router.push('/');\n    }\n  }, [isLoggedIn]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    name: \"user-nickname\",\n    value: nickname,\n    onChange: onChangeNickname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-pass\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"\\uC81C\\uB85C\\uCD08 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch5/front/pages/signup.js"],"names":["React","useRef","useState","useCallback","useEffect","memo","AppLayout","Head","Form","Input","Checkbox","Button","PropTypes","useDispatch","useSelector","signUpAction","SIGN_UP_REQUEST","Router","TextInput","name","value","onChange","useInput","initValue","setValue","handler","e","target","Signup","id","onChangeId","nickname","onChangeNickname","password","onChangePassword","passwordCheck","onChangePasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","dispatch","me","isLoggedIn","state","user","onSubmit","preventDefault","console","log","type","data","userId","push","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useCallback, useEffect, memo} from 'react'\r\nimport AppLayout from '../components/AppLayout'\r\nimport Head from 'next/head'\r\nimport {Form, Input, Checkbox, Button} from 'antd'\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpAction, SIGN_UP_REQUEST } from '../reducers/user';\r\nimport Router from 'next/router';\r\n\r\nconst TextInput = memo(({ name, value, onChange }) => {\r\n    return (\r\n        <Input name={name} value={value} required onChange={onChange}></Input>\r\n    )\r\n})\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setValue] = useState(initValue);\r\n\r\n    const handler = useCallback((e) => {\r\n        setValue(e.target.value);\r\n    }, [])\r\n    return [value, handler]\r\n}\r\n\r\nconst Signup = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');  // 패스워드\r\n    const [passwordCheck, onChangePasswordCheck] = useInput(''); // 패스워드확인\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const { me, isLoggedIn } = useSelector(state => state.user);\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        \r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        console.log({id, nickname, password, passwordCheck, term});\r\n        \r\n        // dispatch(signUpAction({ id, password, nickname }));\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: { \r\n                userId: id, \r\n                password, \r\n                nickname },\r\n          });\r\n    }, [password, passwordCheck, term])\r\n    \r\n    useEffect(() => {\r\n        setPasswordError(password !== passwordCheck)\r\n    }, [password, passwordCheck])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn === true) {\r\n            // alert('이미 로그인 되어있어 메인화면으로 이동합니다.')\r\n            Router.push('/');\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked)\r\n    }, [])\r\n\r\n    return (\r\n    <>\r\n        <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                {/* <Input name=\"user-id\" value={id} required  onChange={onChangeId} /> */}\r\n                <TextInput name=\"user-id\" value={id} onChange={onChangeId} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-nickname\">닉네임</label>\r\n                <br />\r\n                {/* <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} /> */}\r\n                <TextInput name=\"user-nickname\" value={nickname} onChange={onChangeNickname} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input name=\"user-pass\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                <br />\r\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                {passwordError && <div style={{ color:'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n            </div>\r\n            <div>\r\n                <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n            </div>\r\n        </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}
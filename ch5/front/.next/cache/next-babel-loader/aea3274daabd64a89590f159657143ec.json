{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogout),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user'; // SIGN UP\n\nfunction signUpAPI(signUpData) {\n  return axios.post('/user/', signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // LOG IN\n\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login/', loginData, {\n    withCredentials: true\n  }); // console.log('사가에서 받은 id pw')\n  // for (let i in loginData) {\n  //     console.log(i + ' ' + loginData[i]);\n  // }\n  // yield delay(2000);\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          console.log('result = ' + _JSON$stringify(result.data));\n          _context3.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout/', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 13;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          ;\n          _context5.next = 13;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 14;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          ;\n          _context7.next = 14;\n          return put({\n            type: LOAD_USER_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([watchSignUp(), // watchHello(),\n          watchLogin(), watchLogout(), watchLoadUser()]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n} // function* hello() {\n//     try {\n//         yield put({\n//             type: 'HELLO_TWO',\n//         });\n//         console.log('hello');\n//     } catch (e) {\n//         console.error(e);\n//     }\n// }\n// function* watchHello() {\n//     yield takeEvery(HELLO_SAGA, function*() {\n//         yield delay(1000);\n//         console.log(1);\n//     })\n// }\n// function* watchLogin() {\n//     yield take(LOG_IN);\n//     yield delay(2000);\n//     yield put({type: LOG_IN_SUCCESS});\n// }","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch5/front/sagas/user.js"],"names":["signUp","watchSignUp","login","watchLogin","logout","watchLogout","loadUser","watchLoadUser","userSaga","all","fork","takeLatest","put","call","take","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","signUpAPI","signUpData","post","action","data","type","console","error","loginAPI","loginData","withCredentials","result","log","logoutAPI","loadUserAPI","get"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\nimport { \r\n    LOG_IN_REQUEST, \r\n    LOG_IN_SUCCESS, \r\n    LOG_IN_FAILURE, \r\n    SIGN_UP_REQUEST, \r\n    SIGN_UP_SUCCESS, \r\n    SIGN_UP_FAILURE,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST, \r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAILURE,\r\n} from '../reducers/user'\r\n\r\n// SIGN UP\r\nfunction signUpAPI(signUpData) {\r\n    return axios.post('/user/', signUpData)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        // throw new Error('일부로 에러 내기');\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp); \r\n}\r\n\r\n// LOG IN\r\nfunction loginAPI(loginData) {\r\n  return axios.post('/user/login/', loginData, {\r\n      withCredentials: true,\r\n  });\r\n    // console.log('사가에서 받은 id pw')\r\n    // for (let i in loginData) {\r\n    //     console.log(i + ' ' + loginData[i]);\r\n    // }\r\n    // yield delay(2000);\r\n}\r\n\r\nfunction* login(action) {\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        console.log('result = '+ JSON.stringify(result.data));\r\n        \r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction *watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction logoutAPI() {\r\n    return axios.post('/user/logout/', {}, {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* logout() {\r\n    try {\r\n        yield call(logoutAPI)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        console.error(e);;\r\n        yield put({\r\n            type: LOG_OUT_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction *watchLogout() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\n\r\nfunction loadUserAPI() {\r\n    return axios.get('/user/', {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* loadUser() {\r\n    try {\r\n        const result = yield call(loadUserAPI)\r\n        yield put({\r\n            type: LOAD_USER_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch(e) {\r\n        console.error(e);;\r\n        yield put({\r\n            type: LOAD_USER_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction *watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchSignUp(),\r\n        // watchHello(),\r\n        watchLogin(),\r\n        watchLogout(),\r\n        watchLoadUser(),\r\n    ]);\r\n}\r\n\r\n// function* hello() {\r\n//     try {\r\n//         yield put({\r\n//             type: 'HELLO_TWO',\r\n//         });\r\n//         console.log('hello');\r\n//     } catch (e) {\r\n//         console.error(e);\r\n//     }\r\n// }\r\n\r\n// function* watchHello() {\r\n//     yield takeEvery(HELLO_SAGA, function*() {\r\n//         yield delay(1000);\r\n//         console.log(1);\r\n//     })\r\n// }\r\n\r\n\r\n\r\n// function* watchLogin() {\r\n//     yield take(LOG_IN);\r\n//     yield delay(2000);\r\n//     yield put({type: LOG_IN_SUCCESS});\r\n// }"]},"metadata":{},"sourceType":"module"}
{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.f34751a12b8b3c99bb0a.hot-update.js","sources":["webpack:///./sagas/post.js"],"sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, \r\n    ADD_COMMENT_REQUEST,  ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n    LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_SUCCESS, \r\n} from '../reducers/post';\r\n\r\n// import next from 'next';\r\n\r\nfunction addPostAPI(postData) {\r\n    return axios.post('/post/', postData, {\r\n        withCredentials: true,\r\n    })\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield addPostAPI(action.data);\r\n        \r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        })\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_REQUEST,\r\n        })\r\n    } catch (e) {\r\n        console.log('e = '+ e);\r\n        \r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId\r\n            }\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)    \r\n}\r\n\r\nfunction loadMainPostsAPI() {\r\n    return axios.get('/posts/');\r\n}\r\n\r\nfunction* loadMainPosts() {\r\n    try {\r\n        const result = yield loadMainPostsAPI();\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_SUCCESS,\r\n            data: result.data,\r\n        })\r\n    } catch(e) {\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLoadMainPosts() {\r\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts)\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchLoadMainPosts),\r\n    ]);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAeA;;;AAqBA;;;AAIA;;;AAiBA;;;AAQA;;;AAeA;;;AAIA;AACA;AArFA;AACA;AACA;AACA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AALA;AAAA;AAQA;AACA;AADA;AACA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AAZA;AAcA;AACA;AACA;AAFA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAFA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
{"ast":null,"code":"import { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user'; // SIGN UP\n\nfunction* signUpAPI() {\n  // return axios.post('/login');\n  yield delay(2000);\n}\n\nfunction* signUp() {\n  try {\n    yield call(signUpAPI);\n    throw new Error('회원가입은 일단 에러나게 해놈');\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} // LOG IN\n\n\nfunction* loginAPI() {\n  //   return axios.post('/login');\n  yield delay(2000);\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([watchSignUp(), // watchHello(),\n  watchLogin()]);\n} // function* hello() {\n//     try {\n//         yield put({\n//             type: 'HELLO_TWO',\n//         });\n//         console.log('hello');\n//     } catch (e) {\n//         console.error(e);\n//     }\n// }\n// function* watchHello() {\n//     yield takeEvery(HELLO_SAGA, function*() {\n//         yield delay(1000);\n//         console.log(1);\n//     })\n// }\n// function* watchLogin() {\n//     yield take(LOG_IN);\n//     yield delay(2000);\n//     yield put({type: LOG_IN_SUCCESS});\n// }","map":{"version":3,"sources":["C:/Program Files/Git/usr/react-nodebird/ch4/front/sagas/user.js"],"names":["all","fork","takeLatest","put","call","take","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signUpAPI","signUp","Error","type","e","console","error","watchSignUp","loginAPI","login","watchLogin","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,QAA8D,oBAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP,C,CASA;;AACA,UAAUC,SAAV,GAAsB;AAClB;AACA,QAAMR,KAAK,CAAC,IAAD,CAAX;AACH;;AAED,UAAUS,MAAV,GAAmB;AACf,MAAI;AACA,UAAMX,IAAI,CAACU,SAAD,CAAV;AACA,UAAM,IAAIE,KAAJ,CAAU,kBAAV,CAAN;AACA,UAAMb,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEL;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOM,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUQ,WAAV,GAAwB;AACpB,QAAMnB,UAAU,CAACS,eAAD,EAAkBI,MAAlB,CAAhB;AACH,C,CAED;;;AACA,UAAUO,QAAV,GAAqB;AACrB;AACI,QAAMhB,KAAK,CAAC,IAAD,CAAX;AACH;;AAED,UAAUiB,KAAV,GAAkB;AACd,MAAI;AACA,UAAMnB,IAAI,CAACkB,QAAD,CAAV;AACA,UAAMnB,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAER;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOS,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUc,UAAV,GAAuB;AACnB,QAAMtB,UAAU,CAACM,cAAD,EAAiBe,KAAjB,CAAhB;AACH;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAChC,QAAMzB,GAAG,CAAC,CACNqB,WAAW,EADL,EAEN;AACAG,EAAAA,UAAU,EAHJ,CAAD,CAAT;AAKH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA","sourcesContent":["import { all, fork, takeLatest, put, call, take, delay } from 'redux-saga/effects';\r\nimport axios from 'axios'\r\nimport { \r\n    LOG_IN_REQUEST, \r\n    LOG_IN_SUCCESS, \r\n    LOG_IN_FAILURE, \r\n    SIGN_UP_REQUEST, \r\n    SIGN_UP_SUCCESS, \r\n    SIGN_UP_FAILURE, \r\n} from '../reducers/user'\r\n\r\n// SIGN UP\r\nfunction* signUpAPI() {\r\n    // return axios.post('/login');\r\n    yield delay(2000);\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        yield call(signUpAPI);\r\n        throw new Error('회원가입은 일단 에러나게 해놈');\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp); \r\n}\r\n\r\n// LOG IN\r\nfunction* loginAPI() {\r\n//   return axios.post('/login');\r\n    yield delay(2000);\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction *watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchSignUp(),\r\n        // watchHello(),\r\n        watchLogin(),\r\n    ]);\r\n}\r\n\r\n// function* hello() {\r\n//     try {\r\n//         yield put({\r\n//             type: 'HELLO_TWO',\r\n//         });\r\n//         console.log('hello');\r\n//     } catch (e) {\r\n//         console.error(e);\r\n//     }\r\n// }\r\n\r\n// function* watchHello() {\r\n//     yield takeEvery(HELLO_SAGA, function*() {\r\n//         yield delay(1000);\r\n//         console.log(1);\r\n//     })\r\n// }\r\n\r\n\r\n\r\n// function* watchLogin() {\r\n//     yield take(LOG_IN);\r\n//     yield delay(2000);\r\n//     yield put({type: LOG_IN_SUCCESS});\r\n// }"]},"metadata":{},"sourceType":"module"}
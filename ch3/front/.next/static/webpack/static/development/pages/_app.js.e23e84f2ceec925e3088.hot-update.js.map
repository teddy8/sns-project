{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.e23e84f2ceec925e3088.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, {useRef, useState, useCallback, useEffect, memo} from 'react'\r\nimport AppLayout from '../components/AppLayout'\r\nimport Head from 'next/head'\r\nimport {Form, Input, Checkbox, Button} from 'antd'\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signUpAction } from '../reducers/user';\r\n\r\nconst TextInput = memo(({ name, value, onChange }) => {\r\n    return (\r\n        <Input name={name} value={value} required onChange={onChange}></Input>\r\n    )\r\n})\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setValue] = useState(initValue);\r\n\r\n    const handler = useCallback((e) => {\r\n        setValue(e.target.value);\r\n    }, [])\r\n    return [value, handler]\r\n}\r\n\r\nconst Signup = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [nickname, onChangeNickname] = useInput('');\r\n    const [password, onChangePassword] = useInput('');  // 패스워드\r\n    const [passwordCheck, onChangePasswordCheck] = useInput(''); // 패스워드확인\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        \r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term) {\r\n            return setTermError(true);\r\n        }\r\n        console.log({id, nickname, password, passwordCheck, term});\r\n        \r\n        dispatch(signUpAction({\r\n            id, password, nickname\r\n        }));\r\n\r\n    }, [password, passwordCheck, term])\r\n\r\n    useEffect(() => {\r\n        setPasswordError(password !== passwordCheck)\r\n    }, [password, passwordCheck])\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked)\r\n    }, [])\r\n\r\n    return (\r\n    <>\r\n        <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                {/* <Input name=\"user-id\" value={id} required  onChange={onChangeId} /> */}\r\n                <TextInput name=\"user-id\" value={id} onChange={onChangeId} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-nickname\">닉네임</label>\r\n                <br />\r\n                {/* <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} /> */}\r\n                <TextInput name=\"user-nickname\" value={nickname} onChange={onChangeNickname} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input name=\"user-pass\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                <br />\r\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                {passwordError && <div style={{ color:'red' }}>비밀번호가 일치하지 않습니다.</div>}\r\n            </div>\r\n            <div>\r\n                <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>제로초 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n            </div>\r\n        </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}